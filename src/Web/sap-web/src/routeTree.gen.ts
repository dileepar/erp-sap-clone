/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as HrEmployeesRouteImport } from './routes/hr/employees'
import { Route as FinancialJournalEntriesRouteImport } from './routes/financial/journal-entries'
import { Route as FinancialAccountsRouteImport } from './routes/financial/accounts'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const HrEmployeesRoute = HrEmployeesRouteImport.update({
  id: '/hr/employees',
  path: '/hr/employees',
  getParentRoute: () => rootRouteImport,
} as any)
const FinancialJournalEntriesRoute = FinancialJournalEntriesRouteImport.update({
  id: '/financial/journal-entries',
  path: '/financial/journal-entries',
  getParentRoute: () => rootRouteImport,
} as any)
const FinancialAccountsRoute = FinancialAccountsRouteImport.update({
  id: '/financial/accounts',
  path: '/financial/accounts',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/financial/accounts': typeof FinancialAccountsRoute
  '/financial/journal-entries': typeof FinancialJournalEntriesRoute
  '/hr/employees': typeof HrEmployeesRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/financial/accounts': typeof FinancialAccountsRoute
  '/financial/journal-entries': typeof FinancialJournalEntriesRoute
  '/hr/employees': typeof HrEmployeesRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/financial/accounts': typeof FinancialAccountsRoute
  '/financial/journal-entries': typeof FinancialJournalEntriesRoute
  '/hr/employees': typeof HrEmployeesRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/financial/accounts'
    | '/financial/journal-entries'
    | '/hr/employees'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/financial/accounts'
    | '/financial/journal-entries'
    | '/hr/employees'
  id:
    | '__root__'
    | '/'
    | '/financial/accounts'
    | '/financial/journal-entries'
    | '/hr/employees'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  FinancialAccountsRoute: typeof FinancialAccountsRoute
  FinancialJournalEntriesRoute: typeof FinancialJournalEntriesRoute
  HrEmployeesRoute: typeof HrEmployeesRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/hr/employees': {
      id: '/hr/employees'
      path: '/hr/employees'
      fullPath: '/hr/employees'
      preLoaderRoute: typeof HrEmployeesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/financial/journal-entries': {
      id: '/financial/journal-entries'
      path: '/financial/journal-entries'
      fullPath: '/financial/journal-entries'
      preLoaderRoute: typeof FinancialJournalEntriesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/financial/accounts': {
      id: '/financial/accounts'
      path: '/financial/accounts'
      fullPath: '/financial/accounts'
      preLoaderRoute: typeof FinancialAccountsRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  FinancialAccountsRoute: FinancialAccountsRoute,
  FinancialJournalEntriesRoute: FinancialJournalEntriesRoute,
  HrEmployeesRoute: HrEmployeesRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
